#!/bin/bash

#
# Usage:
#
#   ./bin/init-new-project
#
# We do -not- expect this script to be called from the 'scripts' directory
# of the pantheon-systems/travis-scripts project.  Rather, it is our
# expectation that the user has 'require'd travis-scripts from their
# project's composer.json file.  Thus, `composer install` will have copied
# this script into the project's 'bin' directory.  We will test this
# assumption and fail with an error if the script is being called incorrectly.
#
# See the README.md for more information.
#

# Find the project base directory, where this script was executed from.
SELF_DIRNAME="`dirname -- "$0"`"

# The project base dir is the immediate parent of the 'bin' dir
PROJECT_BASE_DIR="`cd -P -- "$SELF_DIRNAME/.." && pwd -P`"

# The project name is the name of the directory that contains the project
PROJECT_NAME="$(basename "PROJECT_BASE_DIR")"

# We expect that pantheon-systems/travis-scripts is in the project's
# composer.json file, and that therefore we should be able to find
# the 'examples' directory in VENDOR/pantheon-systems/travis-scripts/examples.
# The 'vendor' directory should be in drupal/sites/all/vendor, but
# we will allow that it might be in the root directory of the project,
# e.g. if the user added pantheon-systems/travis-scripts to an existing
# composer.json file manually, and still wishes to run this init script.
VENDOR_DIR="$PROJECT_BASE_DIR/drupal/sites/all/vendor"
if [ ! -d "$VENDOR_DIR" ]
then
  VENDOR_DIR="$PROJECT_BASE_DIR/vendor"
fi
TRAVIS_SCRIPTS_DIR="$VENDOR_DIR/pantheon-systems/travis-scripts"
EXAMPLES_DIR="$TRAVIS_SCRIPTS_DIR/examples"

# Test to see if this script was called correctly
if [ "$(basename "$SELF_DIRNAME")" != "bin" ] || [ ! -d "$EXAMPLES_DIR" ]
then
  echo "See the README.md for instructions on how to use this script." >&2
  exit 1
fi

# Check to see if the existing composer.json file is the distribution
# version.  If it is, then replace it with the example composer.json.
grep -q "replace this file and set up your starting project" $PROJECT_BASE_DIR/composer.json
if [ "$?" == "0" ] ; then
  rm -f $PROJECT_BASE_DIR/composer.json
fi

# Check to see if the existing README.md is the distribution version.
# If it is, then replace it with the initial README.md file from the
# examples directory.
grep -q "composer create-project pantheon-systems/example-drupal7-composer" $PROJECT_BASE_DIR/README.md
if [ "$?" == "0" ] ; then
  rm -f $PROJECT_BASE_DIR/README.md
fi

# Copy and rename the example files per the instructions in the README.
# Do not overwrite any existing files -- ignore errors
cp -n $EXAMPLES_DIR/example.composer.json $PROJECT_BASE_DIR/composer.json
cp -n $EXAMPLES_DIR/example.gitignore $PROJECT_BASE_DIR/.gitignore
cp -n $EXAMPLES_DIR/example.travis.yml $PROJECT_BASE_DIR/.travis.yml
cp -n $EXAMPLES_DIR/example.behat.yml $PROJECT_BASE_DIR/behat.yml
cp -n $EXAMPLES_DIR/initial.README.md $PROJECT_BASE_DIR/README.md

# Duplicate the entire 'features' directory with rsync. Ignore existing files.
rsync -rv --ignore-existing $EXAMPLES_DIR/features $PROJECT_BASE_DIR &> /dev/null

# Create a local git repository, if one does not already exist
if [ ! -d "$PROJECT_BASE_DIR/.git" ]
then
  cd "$PROJECT_BASE_DIR"
  git init
  git add .
  git commit -m "Project '$PROJECT_NAME' created via pantheon-systems/travis-scripts."
  echo
  echo "Project initialization completed.  Please see the local README.md file for next steps."
fi
